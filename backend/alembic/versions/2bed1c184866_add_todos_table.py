"""Add todos table

Revision ID: 2bed1c184866
Revises: 
Create Date: 2025-08-09 04:56:39.383885

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '2bed1c184866'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('todos',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('text', sa.Text(), nullable=False),
    sa.Column('is_completed', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('exports')
    op.drop_table('build_plans')
    op.drop_table('conversations')
    op.alter_column('ideas', 'tags',
               existing_type=postgresql.ARRAY(sa.VARCHAR()),
               nullable=False)
    op.alter_column('ideas', 'status',
               existing_type=sa.VARCHAR(length=20),
               type_=sa.Enum('captured', 'refining', 'planned', 'archived', name='ideastatus'),
               existing_nullable=True)
    op.drop_column('ideas', 'implementation_notes')
    op.drop_column('ideas', 'refined_description')
    op.drop_column('ideas', 'target_audience')
    op.drop_column('ideas', 'problem_statement')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('ideas', sa.Column('problem_statement', sa.TEXT(), autoincrement=False, nullable=True))
    op.add_column('ideas', sa.Column('target_audience', sa.TEXT(), autoincrement=False, nullable=True))
    op.add_column('ideas', sa.Column('refined_description', sa.TEXT(), autoincrement=False, nullable=True))
    op.add_column('ideas', sa.Column('implementation_notes', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.alter_column('ideas', 'status',
               existing_type=sa.Enum('captured', 'refining', 'planned', 'archived', name='ideastatus'),
               type_=sa.VARCHAR(length=20),
               existing_nullable=True)
    op.alter_column('ideas', 'tags',
               existing_type=postgresql.ARRAY(sa.VARCHAR()),
               nullable=True)
    op.create_table('conversations',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('idea_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('mode', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
    sa.Column('messages', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('context', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['idea_id'], ['ideas.id'], name='conversations_idea_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='conversations_pkey')
    )
    op.create_table('build_plans',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('idea_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('plan_data', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=False),
    sa.Column('export_configs', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['idea_id'], ['ideas.id'], name='build_plans_idea_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='build_plans_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('exports',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('build_plan_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('export_type', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('file_data', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['build_plan_id'], ['build_plans.id'], name='exports_build_plan_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='exports_pkey')
    )
    op.drop_table('todos')
    # ### end Alembic commands ###